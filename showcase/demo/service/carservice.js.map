{"version":3,"file":"carservice.js","sourceRoot":"","sources":["carservice.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAAyC;AACzC,sCAA6C;AAI7C,IAAa,UAAU;IAEnB,oBAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;IAAG,CAAC;IAElC,iCAAY,GAAZ;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,yCAAyC,CAAC;aAClD,SAAS,EAAE;aACX,IAAI,CAAC,UAAA,GAAG,IAAI,OAAQ,GAAG,CAAC,IAAI,EAAE,CAAC,IAAI,EAAvB,CAAuB,CAAC;aACpC,IAAI,CAAC,UAAA,IAAI,IAAM,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAChD,CAAC;IAED,kCAAa,GAAb;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,0CAA0C,CAAC;aACnD,SAAS,EAAE;aACX,IAAI,CAAC,UAAA,GAAG,IAAI,OAAQ,GAAG,CAAC,IAAI,EAAE,CAAC,IAAI,EAAvB,CAAuB,CAAC;aACpC,IAAI,CAAC,UAAA,IAAI,IAAM,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAChD,CAAC;IAED,iCAAY,GAAZ;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,yCAAyC,CAAC;aAClD,SAAS,EAAE;aACX,IAAI,CAAC,UAAA,GAAG,IAAI,OAAQ,GAAG,CAAC,IAAI,EAAE,CAAC,IAAI,EAAvB,CAAuB,CAAC;aACpC,IAAI,CAAC,UAAA,IAAI,IAAM,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAChD,CAAC;IACL,iBAAC;AAAD,CAAC,AAxBD,IAwBC;AAxBY,UAAU;IADtB,iBAAU,EAAE;qCAGiB,WAAI;GAFrB,UAAU,CAwBtB;AAxBY,gCAAU","sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {Http, Response} from '@angular/http';\r\nimport {Car} from '../domain/car';\r\n\r\n@Injectable()\r\nexport class CarService {\r\n    \r\n    constructor(private http: Http) {}\r\n\r\n    getCarsSmall() {\r\n        return this.http.get('showcase/resources/data/cars-small.json')\r\n                    .toPromise()\r\n                    .then(res => <Car[]> res.json().data)\r\n                    .then(data => { return data; });\r\n    }\r\n\r\n    getCarsMedium() {\r\n        return this.http.get('showcase/resources/data/cars-medium.json')\r\n                    .toPromise()\r\n                    .then(res => <Car[]> res.json().data)\r\n                    .then(data => { return data; });\r\n    }\r\n\r\n    getCarsLarge() {\r\n        return this.http.get('showcase/resources/data/cars-large.json')\r\n                    .toPromise()\r\n                    .then(res => <Car[]> res.json().data)\r\n                    .then(data => { return data; });\r\n    }\r\n}"]}