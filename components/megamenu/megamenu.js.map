{"version":3,"file":"megamenu.js","sourceRoot":"","sources":["megamenu.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule,Component,ElementRef,AfterViewInit,OnDestroy,Input,Output,Renderer,EventEmitter} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {DomHandler} from '../dom/domhandler';\r\nimport {MenuItem} from '../common/api';\r\nimport {Location} from '@angular/common';\r\nimport {RouterModule} from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'p-megaMenu',\r\n    template: `\r\n        <div [class]=\"styleClass\" [ngStyle]=\"style\"\r\n            [ngClass]=\"{'ui-menu ui-menubar ui-megamenu ui-widget ui-widget-content ui-corner-all ui-helper-clearfix':true,'ui-megamenu-vertical': orientation == 'vertical'}\">\r\n            <ul class=\"ui-menu-list ui-helper-reset ui-menubar-root-list\">\r\n                <ng-template ngFor let-category [ngForOf]=\"model\">\r\n                    <li #item [ngClass]=\"{'ui-menuitem ui-widget ui-corner-all':true,'ui-menu-parent':category.items,'ui-menuitem-active':item==activeItem}\"\r\n                        (mouseenter)=\"onItemMouseEnter($event, item, category)\" (mouseleave)=\"onItemMouseLeave($event, item)\">\r\n                        <a class=\"ui-menuitem-link ui-corner-all ui-submenu-link\" [ngClass]=\"{'ui-state-disabled':category.disabled}\">\r\n                            <span class=\"ui-menuitem-icon fa fa-fw\" [ngClass]=\"category.icon\"></span>\r\n                            <span class=\"ui-menuitem-text\">{{category.label}}</span>\r\n                            <span class=\"ui-submenu-icon fa fa-fw\" [ngClass]=\"{'fa-caret-down':orientation=='horizontal','fa-caret-right':orientation=='vertical'}\"></span>\r\n                        </a>\r\n                        <div class=\"ui-megamenu-panel ui-widget-content ui-menu-list ui-corner-all ui-helper-clearfix ui-menu-child ui-shadow\">\r\n                            <div class=\"ui-g\">\r\n                                <ng-template ngFor let-column [ngForOf]=\"category.items\">\r\n                                    <div [class]=\"getColumnClass(category)\">\r\n                                        <ng-template ngFor let-submenu [ngForOf]=\"column\">\r\n                                            <ul class=\"ui-menu-list ui-helper-reset\">\r\n                                                <li class=\"ui-widget-header ui-corner-all\"><h3>{{submenu.label}}</h3></li>\r\n                                                <li *ngFor=\"let item of submenu.items\" class=\"ui-menuitem ui-widget ui-corner-all\">\r\n                                                    <a *ngIf=\"!item.routerLink\" [href]=\"item.url||'#'\" class=\"ui-menuitem-link ui-corner-all\" [attr.target]=\"item.target\"\r\n                                                        [ngClass]=\"{'ui-state-disabled':item.disabled}\" (click)=\"itemClick($event, item)\">\r\n                                                        <span class=\"ui-menuitem-icon fa fa-fw\" *ngIf=\"item.icon\" [ngClass]=\"item.icon\"></span>\r\n                                                        <span class=\"ui-menuitem-text\">{{item.label}}</span>\r\n                                                    </a>\r\n                                                    <a *ngIf=\"item.routerLink\" [routerLink]=\"item.routerLink\" [routerLinkActive]=\"'ui-state-active'\" class=\"ui-menuitem-link ui-corner-all\" [attr.target]=\"item.target\"\r\n                                                        [ngClass]=\"{'ui-state-disabled':item.disabled}\" (click)=\"itemClick($event, item)\">\r\n                                                        <span class=\"ui-menuitem-icon fa fa-fw\" *ngIf=\"item.icon\" [ngClass]=\"item.icon\"></span>\r\n                                                        <span class=\"ui-menuitem-text\">{{item.label}}</span>\r\n                                                    </a>\r\n                                                </li>\r\n                                            </ul>\r\n                                        </ng-template>\r\n                                    </div>\r\n                                </ng-template>\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n                </ng-template>\r\n            </ul>\r\n        </div>\r\n    `,\r\n    providers: [DomHandler]\r\n})\r\nexport class MegaMenu implements OnDestroy {\r\n\r\n    @Input() model: MenuItem[];\r\n\r\n    @Input() style: any;\r\n\r\n    @Input() styleClass: string;\r\n    \r\n    @Input() orientation: string = 'horizontal';\r\n    \r\n    activeItem: any;\r\n                \r\n    constructor(public el: ElementRef, public domHandler: DomHandler, public renderer: Renderer) {}\r\n    \r\n    onItemMouseEnter(event, item, menuitem: MenuItem) {\r\n        if(menuitem.disabled) {\r\n            return;\r\n        }\r\n        \r\n        this.activeItem = item;\r\n        let submenu =  item.children[0].nextElementSibling;\r\n        if(submenu) {\r\n            submenu.style.zIndex = ++DomHandler.zindex;\r\n\r\n            if(this.orientation === 'horizontal')  {\r\n                submenu.style.top = this.domHandler.getOuterHeight(item.children[0]) + 'px';\r\n                submenu.style.left = '0px';\r\n            }\r\n            else if(this.orientation === 'vertical')  {\r\n                submenu.style.top = '0px';\r\n                submenu.style.left = this.domHandler.getOuterWidth(item.children[0]) + 'px';\r\n            }\r\n        }\r\n    }\r\n    \r\n    onItemMouseLeave(event, link) {\r\n        this.activeItem = null;\r\n    }\r\n    \r\n    itemClick(event, item: MenuItem)Â {\r\n        if(item.disabled) {\r\n            event.preventDefault();\r\n            return;\r\n        }\r\n        \r\n        if(!item.url) {\r\n            event.preventDefault();\r\n        }\r\n        \r\n        if(item.command) {\r\n            if(!item.eventEmitter) {\r\n                item.eventEmitter = new EventEmitter();\r\n                item.eventEmitter.subscribe(item.command);\r\n            }\r\n            \r\n            item.eventEmitter.emit({\r\n                originalEvent: event,\r\n                item: item\r\n            });\r\n        }\r\n                        \r\n        this.activeItem = null;\r\n    }\r\n    \r\n    unsubscribe(item: any) {\r\n        if(item.eventEmitter) {\r\n            item.eventEmitter.unsubscribe();\r\n        }\r\n        \r\n        if(item.items) {\r\n            for(let childItem of item.items) {\r\n                this.unsubscribe(childItem);\r\n            }\r\n        }\r\n    }\r\n    \r\n    ngOnDestroy() {        \r\n        if(this.model) {\r\n            for(let item of this.model) {\r\n                this.unsubscribe(item);\r\n            }\r\n        }\r\n    }\r\n    \r\n    getColumnClass(menuitem: MenuItem) {\r\n        let length = menuitem.items ? menuitem.items.length: 0;\r\n        let columnClass;\r\n        switch(length) {\r\n            case 2:\r\n                columnClass= 'ui-g-6';\r\n            break;\r\n            \r\n            case 3:\r\n                columnClass= 'ui-g-4';\r\n            break;\r\n            \r\n            case 4:\r\n                columnClass= 'ui-g-3';\r\n            break;\r\n            \r\n            case 6:\r\n                columnClass= 'ui-g-2';\r\n            break;\r\n                        \r\n            default:\r\n                columnClass= 'ui-g-12';\r\n            break;\r\n        }\r\n        \r\n        return columnClass;\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule,RouterModule],\r\n    exports: [MegaMenu,RouterModule],\r\n    declarations: [MegaMenu]\r\n})\r\nexport class MegaMenuModule { }"]}