{"version":3,"file":"fieldset.js","sourceRoot":"","sources":["fieldset.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule,Component,Input,Output,EventEmitter,ElementRef} from '@angular/core';\r\nimport {trigger,state,style,transition,animate} from '@angular/animations';\r\nimport {CommonModule} from '@angular/common';\r\nimport {SharedModule} from '../common/shared';\r\nimport {BlockableUI} from '../common/api';\r\n\r\n@Component({\r\n    selector: 'p-fieldset',\r\n    template: `\r\n        <fieldset [ngClass]=\"{'ui-fieldset ui-widget ui-widget-content ui-corner-all': true, 'ui-fieldset-toggleable': toggleable}\" [ngStyle]=\"style\" [class]=\"styleClass\">\r\n            <legend class=\"ui-fieldset-legend ui-corner-all ui-state-default ui-unselectable-text\" (click)=\"toggle($event)\">\r\n                <span *ngIf=\"toggleable\" class=\"ui-fieldset-toggler fa fa-w\" [ngClass]=\"{'fa-minus': !collapsed,'fa-plus':collapsed}\"></span>\r\n                {{legend}}\r\n                <ng-content select=\"p-header\"></ng-content>\r\n            </legend>\r\n            <div class=\"ui-fieldset-content-wrapper\" [@fieldsetContent]=\"collapsed ? 'hidden' : 'visible'\" \r\n                        [ngClass]=\"{'ui-fieldset-content-wrapper-overflown': collapsed||animating}\">\r\n                <div class=\"ui-fieldset-content\">\r\n                    <ng-content></ng-content>\r\n                </div>\r\n            </div>\r\n        </fieldset>\r\n    `,\r\n    animations: [\r\n        trigger('fieldsetContent', [\r\n            state('hidden', style({\r\n                height: '0px'\r\n            })),\r\n            state('visible', style({\r\n                height: '*'\r\n            })),\r\n            transition('visible => hidden', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)')),\r\n            transition('hidden => visible', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)'))\r\n        ])\r\n    ]\r\n})\r\nexport class Fieldset implements BlockableUI {\r\n\r\n    @Input() legend: string;\r\n\r\n    @Input() toggleable: boolean;\r\n\r\n    @Input() collapsed: boolean = false;\r\n\r\n    @Output() onBeforeToggle: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onAfterToggle: EventEmitter<any> = new EventEmitter();\r\n    \r\n    @Input() style: any;\r\n        \r\n    @Input() styleClass: string\r\n    \r\n    public animating: boolean;\r\n    \r\n    constructor(private el: ElementRef) {}\r\n        \r\n    toggle(event) {\r\n        if(this.toggleable) {\r\n            this.animating = true;\r\n            this.onBeforeToggle.emit({originalEvent: event, collapsed: this.collapsed});\r\n            \r\n            if(this.collapsed)\r\n                this.expand(event);\r\n            else\r\n                this.collapse(event);\r\n                \r\n            this.onAfterToggle.emit({originalEvent: event, collapsed: this.collapsed});   \r\n            \r\n            //TODO: Use onDone of animate callback instead with RC6\r\n            setTimeout(() => {\r\n                this.animating = false;\r\n            }, 400);\r\n        }\r\n    }\r\n    \r\n    expand(event) {\r\n        this.collapsed = false;\r\n    }\r\n    \r\n    collapse(event) {\r\n        this.collapsed = true;\r\n    }\r\n    \r\n    getBlockableElement(): HTMLElementÂ {\r\n        return this.el.nativeElement.children[0];\r\n    }\r\n\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    exports: [Fieldset,SharedModule],\r\n    declarations: [Fieldset]\r\n})\r\nexport class FieldsetModule { }"]}