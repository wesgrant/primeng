{"version":3,"file":"fileupload.js","sourceRoot":"","sources":["fileupload.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule,Component,OnInit,Input,Output,EventEmitter,TemplateRef,AfterContentInit,ContentChildren,QueryList} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {DomSanitizer} from '@angular/platform-browser';\r\nimport {ButtonModule} from '../button/button';\r\nimport {MessagesModule} from '../messages/messages';\r\nimport {ProgressBarModule} from '../progressbar/progressbar';\r\nimport {Message} from '../common/api';\r\nimport {PrimeTemplate,SharedModule} from '../common/shared';\r\n\r\n@Component({\r\n    selector: 'p-fileUpload',\r\n    template: `\r\n        <div [ngClass]=\"'ui-fileupload ui-widget'\" [ngStyle]=\"style\" [class]=\"styleClass\">\r\n            <div class=\"ui-fileupload-buttonbar ui-widget-header ui-corner-top\">\r\n                <button type=\"button\" [label]=\"chooseLabel\" icon=\"fa-plus\" pButton class=\"ui-fileupload-choose\" (click)=\"onChooseClick($event, fileinput)\" [disabled]=\"disabled\"> \r\n                    <input #fileinput type=\"file\" (change)=\"onFileSelect($event)\" [multiple]=\"multiple\" [accept]=\"accept\" [disabled]=\"disabled\">\r\n                </button>\r\n\r\n                <button *ngIf=\"!auto\" type=\"button\" [label]=\"uploadLabel\" icon=\"fa-upload\" pButton (click)=\"upload()\" [disabled]=\"!hasFiles()\"></button>\r\n                <button *ngIf=\"!auto\" type=\"button\" [label]=\"cancelLabel\" icon=\"fa-close\" pButton (click)=\"clear()\" [disabled]=\"!hasFiles()\"></button>\r\n            \r\n                <p-templateLoader [template]=\"toolbarTemplate\"></p-templateLoader>\r\n            </div>\r\n            <div [ngClass]=\"{'ui-fileupload-content ui-widget-content ui-corner-bottom':true,'ui-fileupload-highlight':dragHighlight}\" \r\n                (dragenter)=\"onDragEnter($event)\" (dragover)=\"onDragOver($event)\" (dragleave)=\"onDragLeave($event)\" (drop)=\"onDrop($event)\">\r\n                <p-progressBar [value]=\"progress\" [showValue]=\"false\" *ngIf=\"hasFiles()\"></p-progressBar>\r\n                \r\n                <p-messages [value]=\"msgs\"></p-messages>\r\n                \r\n                <div class=\"ui-fileupload-files\" *ngIf=\"hasFiles()\">\r\n                    <div *ngIf=\"!fileTemplate\">\r\n                        <div class=\"ui-fileupload-row\" *ngFor=\"let file of files; let i = index;\">\r\n                            <div><img [src]=\"file.objectURL\" *ngIf=\"isImage(file)\" [width]=\"previewWidth\" /></div>\r\n                            <div>{{file.name}}</div>\r\n                            <div>{{formatSize(file.size)}}</div>\r\n                            <div><button type=\"button\" icon=\"fa-close\" pButton (click)=\"remove(i)\"></button></div>\r\n                        </div>\r\n                    </div>\r\n                    <div *ngIf=\"fileTemplate\">\r\n                        <ng-template ngFor [ngForOf]=\"files\" [ngForTemplate]=\"fileTemplate\"></ng-template>\r\n                    </div>\r\n                </div>\r\n                \r\n                <p-templateLoader [template]=\"contentTemplate\"></p-templateLoader>\r\n            </div>\r\n        </div>\r\n    `\r\n})\r\nexport class FileUpload implements OnInit,AfterContentInit {\r\n    \r\n    @Input() name: string;\r\n    \r\n    @Input() url: string;\r\n    \r\n    @Input() multiple: boolean;\r\n    \r\n    @Input() accept: string;\r\n    \r\n    @Input() disabled: boolean;\r\n    \r\n    @Input() auto: boolean;\r\n        \r\n    @Input() maxFileSize: number;\r\n    \r\n    @Input() invalidFileSizeMessageSummary: string = '{0}: Invalid file size, ';\r\n    \r\n    @Input() invalidFileSizeMessageDetail: string = 'maximum upload size is {0}.';\r\n\r\n    @Input() invalidFileTypeMessageSummary: string = '{0}: Invalid file type, ';\r\n\r\n    @Input() invalidFileTypeMessageDetail: string = 'allowed file types: {0}.';\r\n    \r\n    @Input() style: string;\r\n    \r\n    @Input() styleClass: string;\r\n    \r\n    @Input() previewWidth: number = 50;\r\n    \r\n    @Input() chooseLabel: string = 'Choose';\r\n    \r\n    @Input() uploadLabel: string = 'Upload';\r\n    \r\n    @Input() cancelLabel: string = 'Cancel';\r\n        \r\n    @Output() onBeforeUpload: EventEmitter<any> = new EventEmitter();\r\n\t\r\n\t  @Output() onBeforeSend: EventEmitter<any> = new EventEmitter();\r\n        \r\n    @Output() onUpload: EventEmitter<any> = new EventEmitter();\r\n    \r\n    @Output() onError: EventEmitter<any> = new EventEmitter();\r\n    \r\n    @Output() onClear: EventEmitter<any> = new EventEmitter();\r\n    \r\n    @Output() onSelect: EventEmitter<any> = new EventEmitter();\r\n    \r\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\r\n     \r\n    public files: File[];\r\n    \r\n    public progress: number = 0;\r\n    \r\n    public dragHighlight: boolean;\r\n    \r\n    public msgs: Message[];\r\n    \r\n    public fileTemplate: TemplateRef<any>;\r\n    \r\n    public contentTemplate: TemplateRef<any>; \r\n    \r\n    public toolbarTemplate: TemplateRef<any>; \r\n        \r\n    constructor(private sanitizer: DomSanitizer){}\r\n    \r\n    ngOnInit() {\r\n        this.files = [];\r\n    }\r\n    \r\n    ngAfterContentInit():void {\r\n        this.templates.forEach((item) => {\r\n            switch(item.getType()) {\r\n                case 'file':\r\n                    this.fileTemplate = item.template;\r\n                break;\r\n                \r\n                case 'content':\r\n                    this.contentTemplate = item.template;\r\n                break;\r\n                \r\n                case 'toolbar':\r\n                    this.toolbarTemplate = item.template;\r\n                break;\r\n                \r\n                default:\r\n                    this.fileTemplate = item.template;\r\n                break;\r\n            }\r\n        });\r\n    }\r\n    \r\n    onChooseClick(event, fileInput) {\r\n        fileInput.value = null;\r\n        fileInput.click();\r\n    }\r\n    \r\n    onFileSelect(event) {\r\n        this.msgs = [];\r\n        if(!this.multiple) {\r\n            this.files = [];\r\n        }\r\n        \r\n        let files = event.dataTransfer ? event.dataTransfer.files : event.target.files;\r\n        for(let i = 0; i < files.length; i++) {\r\n            let file = files[i];\r\n            if(this.validate(file)) {\r\n                if(this.isImage(file)) {\r\n                    file.objectURL = this.sanitizer.bypassSecurityTrustUrl((window.URL.createObjectURL(files[i])));\r\n                }\r\n                \r\n                this.files.push(files[i]);\r\n            }\r\n        }\r\n        \r\n        this.onSelect.emit({originalEvent: event, files: files});\r\n        \r\n        if(this.hasFiles() && this.auto) {\r\n            this.upload();\r\n        }\r\n    }\r\n    \r\n    validate(file: File): boolean {\r\n        if(this.accept && !this.isFileTypeValid(file)) {\r\n            this.msgs.push({\r\n                severity: 'error',\r\n                summary: this.invalidFileTypeMessageSummary.replace('{0}', file.name),\r\n                detail: this.invalidFileTypeMessageDetail.replace('{0}', this.accept)\r\n            });\r\n            return false;\r\n        }\r\n\r\n        if(this.maxFileSize  && file.size > this.maxFileSize) {\r\n            this.msgs.push({\r\n                severity: 'error', \r\n                summary: this.invalidFileSizeMessageSummary.replace('{0}', file.name), \r\n                detail: this.invalidFileSizeMessageDetail.replace('{0}', this.formatSize(this.maxFileSize))\r\n            });\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    private isFileTypeValid(file: File): boolean {\r\n        let acceptableTypes = this.accept.split(',');\r\n        for(let type of acceptableTypes) {\r\n            let acceptable = this.isWildcard(type) ? this.getTypeClass(file.type) === this.getTypeClass(type) \r\n                                                    : this.getFileExtension(file) === type;\r\n\r\n            if(acceptable) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getTypeClass(fileType: string): string {\r\n        return fileType.substring(0, fileType.indexOf('/'));\r\n    }\r\n\r\n    isWildcard(fileType: string): boolean {\r\n        return fileType.indexOf('*') !== -1;\r\n    }\r\n    \r\n    getFileExtension(file: File): string {\r\n        return '.' + file.name.split('.').pop();\r\n    }\r\n    \r\n    isImage(file: File): boolean {\r\n        return /^image\\//.test(file.type);\r\n    }\r\n    \r\n    onImageLoad(img: any) {\r\n        window.URL.revokeObjectURL(img.src);\r\n    }\r\n\r\n    upload() {\r\n        this.msgs = [];\r\n        let xhr = new XMLHttpRequest(),\r\n        formData = new FormData();\r\n\r\n\t\tthis.onBeforeUpload.emit({\r\n            'xhr': xhr,\r\n            'formData': formData \r\n        });\r\n\r\n        for(let i = 0; i < this.files.length; i++) {\r\n            formData.append(this.name, this.files[i], this.files[i].name);\r\n        }\r\n\r\n        xhr.upload.addEventListener('progress', (e: ProgressEvent) => {\r\n            if(e.lengthComputable) {\r\n              this.progress = Math.round((e.loaded * 100) / e.total);\r\n            }\r\n          }, false);\r\n\r\n        xhr.onreadystatechange = () => {\r\n            if(xhr.readyState == 4) {\r\n                this.progress = 0;\r\n                \r\n                if(xhr.status >= 200 && xhr.status < 300)\r\n                    this.onUpload.emit({xhr: xhr, files: this.files});\r\n                else\r\n                    this.onError.emit({xhr: xhr, files: this.files});\r\n                \r\n                this.clear();\r\n            }\r\n        };\r\n        \r\n        xhr.open('POST', this.url, true);\r\n\t\t\r\n\t\tthis.onBeforeSend.emit({\r\n\t\t\t'xhr': xhr,\r\n            'formData': formData \r\n\t\t});\r\n        \r\n        xhr.send(formData);\r\n    }\r\n\r\n    clear() {\r\n        this.files = [];\r\n        this.onClear.emit();\r\n    }\r\n    \r\n    remove(index: number) {\r\n        this.files.splice(index, 1);\r\n    }\r\n    \r\n    hasFiles(): boolean {\r\n        return this.files && this.files.length > 0;\r\n    }\r\n    \r\n    onDragEnter(e) {\r\n        if(!this.disabled) {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n        }\r\n    }\r\n    \r\n    onDragOver(e) {\r\n        if(!this.disabled) {\r\n            this.dragHighlight = true;\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n        }\r\n    }\r\n    \r\n    onDragLeave(e) {\r\n        if(!this.disabled) {\r\n            this.dragHighlight = false;\r\n        }\r\n    }\r\n    \r\n    onDrop(e) {\r\n        if(!this.disabled) {\r\n            this.dragHighlight = false;\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n            \r\n            this.onFileSelect(e);\r\n        }\r\n    }\r\n    \r\n    formatSize(bytes) {\r\n        if(bytes == 0) {\r\n            return '0 B';\r\n        }\r\n        let k = 1000,\r\n        dm = 3,\r\n        sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\r\n        i = Math.floor(Math.log(bytes) / Math.log(k));\r\n        \r\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule,SharedModule,ButtonModule,ProgressBarModule,MessagesModule],\r\n    exports: [FileUpload,SharedModule,ButtonModule,ProgressBarModule,MessagesModule],\r\n    declarations: [FileUpload]\r\n})\r\nexport class FileUploadModule { }"]}