{"version":3,"file":"tristatecheckbox.js","sourceRoot":"","sources":["tristatecheckbox.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule,Component,Input,Output,EventEmitter,forwardRef,ChangeDetectorRef} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from '@angular/forms';\r\n\r\nexport const TRISTATECHECKBOX_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => TriStateCheckbox),\r\n  multi: true\r\n};\r\n\r\n@Component({\r\n    selector: 'p-triStateCheckbox',\r\n    template: `\r\n        <div class=\"ui-chkbox ui-tristatechkbox ui-widget\">\r\n            <div class=\"ui-helper-hidden-accessible\">\r\n                <input #input type=\"text\" [attr.id]=\"inputId\" [name]=\"name\" [attr.tabindex]=\"tabindex\" readonly [disabled]=\"disabled\" (keyup)=\"onKeyup($event)\" (keydown)=\"onKeydown($event)\" (focus)=\"onFocus()\" (blur)=\"onBlur()\">\r\n            </div>\r\n            <div class=\"ui-chkbox-box ui-widget ui-corner-all ui-state-default\" (click)=\"onClick($event,input)\"\r\n                [ngClass]=\"{'ui-state-active':value!=null,'ui-state-disabled':disabled,'ui-state-focus':focus}\">\r\n                <span class=\"ui-chkbox-icon fa ui-c\" [ngClass]=\"{'fa-check':value==true,'fa-close':value==false}\"></span>\r\n            </div>\r\n        </div>\r\n    `,\r\n    providers: [TRISTATECHECKBOX_VALUE_ACCESSOR]\r\n})\r\nexport class TriStateCheckbox implements ControlValueAccessor  {\r\n    \r\n    constructor(private cd: ChangeDetectorRef) {}\r\n\r\n    @Input() disabled: boolean;\r\n    \r\n    @Input() name: string;\r\n\r\n    @Input() tabindex: number;\r\n\r\n    @Input() inputId: string;\r\n    \r\n    @Output() onChange: EventEmitter<any> = new EventEmitter();\r\n        \r\n    focus: boolean;\r\n\r\n    value: any;\r\n\r\n    onModelChange: Function = () => {};\r\n    \r\n    onModelTouched: Function = () => {};\r\n    \r\n    onClick(event: Event, input: HTMLInputElement) {\r\n        if(!this.disabled) {\r\n            this.toggle(event);\r\n            this.focus = true;\r\n            input.focus();\r\n        }\r\n    }\r\n    \r\n    onKeydown(event: KeyboardEvent) {\r\n        if(event.keyCode == 32) {\r\n            event.preventDefault();\r\n        }\r\n    }\r\n    \r\n    onKeyup(event: KeyboardEvent) {\r\n        if(event.keyCode == 32) {\r\n            this.toggle(event);\r\n            event.preventDefault();\r\n        }\r\n    }\r\n    \r\n    toggle(event: Event) {\r\n        if(this.value == null || this.value == undefined)\r\n            this.value = true;\r\n        else if(this.value == true)\r\n            this.value = false;\r\n        else if(this.value == false)\r\n            this.value = null;\r\n            \r\n        this.onModelChange(this.value);\r\n        this.onChange.emit({\r\n            originalEvent: event,\r\n            value: this.value\r\n        })\r\n    }\r\n    \r\n    onFocus() {\r\n        this.focus = true;\r\n    }\r\n    \r\n    onBlur() {\r\n        this.focus = false;\r\n        this.onModelTouched();\r\n    }\r\n    \r\n    registerOnChange(fn: Function): void {\r\n        this.onModelChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: Function): void {\r\n        this.onModelTouched = fn;\r\n    }\r\n\r\n    writeValue(value: any) : void {\r\n        this.value = value;\r\n        this.cd.markForCheck();\r\n    }\r\n    \r\n    setDisabledState(disabled: boolean): void {\r\n        this.disabled = disabled;\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    exports: [TriStateCheckbox],\r\n    declarations: [TriStateCheckbox]\r\n})\r\nexport class TriStateCheckboxModule { }"]}