{"version":3,"file":"inputswitch.js","sourceRoot":"","sources":["inputswitch.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAA0I;AAC1I,0CAA6C;AAC7C,wCAAsE;AACtE,gDAA6C;AAEhC,QAAA,0BAA0B,GAAQ;IAC7C,OAAO,EAAE,yBAAiB;IAC1B,WAAW,EAAE,iBAAU,CAAC,cAAM,OAAA,WAAW,EAAX,CAAW,CAAC;IAC1C,KAAK,EAAE,IAAI;CACZ,CAAC;AAsBF,IAAa,WAAW;IA0CpB,qBAAmB,EAAc,EAAS,UAAsB;QAA7C,OAAE,GAAF,EAAE,CAAY;QAAS,eAAU,GAAV,UAAU,CAAY;QAxCvD,YAAO,GAAW,IAAI,CAAC;QAEvB,aAAQ,GAAW,KAAK,CAAC;QAYxB,aAAQ,GAAsB,IAAI,mBAAY,EAAE,CAAC;QAE3D,YAAO,GAAY,KAAK,CAAC;QAEzB,YAAO,GAAY,KAAK,CAAC;QAEzB,kBAAa,GAAa,cAAO,CAAC,CAAC;QAEnC,mBAAc,GAAa,cAAO,CAAC,CAAC;QAgBpC,gBAAW,GAAY,KAAK,CAAC;IAEsC,CAAC;IAEpE,qCAAe,GAAf;QACI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,2BAA2B,CAAC,CAAC;QAC7F,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,EAAC,uBAAuB,CAAC,CAAC;QACtF,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,EAAC,wBAAwB,CAAC,CAAC;QACxF,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,EAAC,6BAA6B,CAAC,CAAC;QAC/F,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,EAAC,8BAA8B,CAAC,CAAC;IACtG,CAAC;IAED,wCAAkB,GAAlB;QACI,EAAE,CAAA,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YAClD,IAAI,CAAC,MAAM,EAAE,CAAC;QAClB,CAAC;IACL,CAAC;IAED,4BAAM,GAAN;QACI,IAAI,gBAAgB,GAAI,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,EAC3D,iBAAiB,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,EAC5D,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,EACxG,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAEzG,IAAI,cAAc,GAAG,CAAC,gBAAgB,GAAG,iBAAiB,CAAC,GAAG,gBAAgB,GAAG,iBAAiB,EAC9F,WAAW,GAAG,cAAc,CAAC;QAEjC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,GAAG,WAAW,GAAG,IAAI,CAAC;QAC7C,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACjD,cAAc,GAAG,cAAc,GAAG,WAAW,GAAG,CAAC,CAAC;QAElD,IAAI,UAAU,GAAG,cAAc,GAAG,WAAW,GAAG,WAAW,GAAG,aAAa,CAAC;QAE5E,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,GAAG,cAAc,GAAG,IAAI,CAAC;QACnD,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,GAAG,UAAU,GAAG,IAAI,CAAC;QAClD,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,GAAG,UAAU,GAAG,IAAI,CAAC;QAEnD,UAAU;QACV,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;QACnF,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAEjG,eAAe;QACf,EAAE,CAAA,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YACd,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YAC5C,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YAClD,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QAC/D,CAAC;QACD,IAAI,CAAC,CAAC;YACF,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC;YACxC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QAC7D,CAAC;QAED,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IAC5B,CAAC;IAED,4BAAM,GAAN,UAAO,KAAK,EAAC,QAAQ;QACjB,EAAE,CAAA,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAChB,EAAE,CAAA,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBACd,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,SAAS,EAAE,CAAA;YACpB,CAAC;YACD,IAAI,CAAC,CAAC;gBACF,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBACpB,IAAI,CAAC,OAAO,EAAE,CAAC;YACnB,CAAC;YAED,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACjC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;gBACf,aAAa,EAAE,KAAK;gBACpB,OAAO,EAAE,IAAI,CAAC,OAAO;aACxB,CAAC,CAAC;YACH,QAAQ,CAAC,KAAK,EAAE,CAAC;QACrB,CAAC;IACL,CAAC;IAED,6BAAO,GAAP;QACI,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QAClD,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,UAAU,GAAG,CAAC,GAAG,IAAI,CAAC;QAC9C,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QAC3D,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IAChD,CAAC;IAED,+BAAS,GAAT;QACI,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC;QACxC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACzD,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,GAAG,IAAI,CAAC;QAChD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC;IACtC,CAAC;IAED,6BAAO,GAAP,UAAQ,KAAK;QACT,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACxB,CAAC;IAED,4BAAM,GAAN,UAAO,KAAK;QACR,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,cAAc,EAAE,CAAC;IAC1B,CAAC;IAED,gCAAU,GAAV,UAAW,OAAY;QACnB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QAEvB,EAAE,CAAA,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YAClB,EAAE,CAAA,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC;gBACrB,IAAI,CAAC,OAAO,EAAE,CAAC;YACnB,IAAI;gBACA,IAAI,CAAC,SAAS,EAAE,CAAC;QACzB,CAAC;IACL,CAAC;IAED,sCAAgB,GAAhB,UAAiB,EAAY;QACzB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;IAC5B,CAAC;IAED,uCAAiB,GAAjB,UAAkB,EAAY;QAC1B,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;IAC7B,CAAC;IAED,sCAAgB,GAAhB,UAAiB,GAAY;QACzB,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;IACxB,CAAC;IACL,kBAAC;AAAD,CAAC,AAjKD,IAiKC;AA/JY;IAAR,YAAK,EAAE;;4CAAwB;AAEvB;IAAR,YAAK,EAAE;;6CAA0B;AAEzB;IAAR,YAAK,EAAE;;6CAAmB;AAElB;IAAR,YAAK,EAAE;;0CAAY;AAEX;IAAR,YAAK,EAAE;;+CAAoB;AAEnB;IAAR,YAAK,EAAE;;6CAAkB;AAEjB;IAAR,YAAK,EAAE;;4CAAiB;AAEf;IAAT,aAAM,EAAE;8BAAW,mBAAY;6CAA2B;AAhBlD,WAAW;IApBvB,gBAAS,CAAC;QACP,QAAQ,EAAE,eAAe;QACzB,QAAQ,EAAE,w6BAeT;QACD,SAAS,EAAE,CAAC,kCAA0B,EAAC,uBAAU,CAAC;KACrD,CAAC;qCA2CyB,iBAAU,EAAqB,uBAAU;GA1CvD,WAAW,CAiKvB;AAjKY,kCAAW;AAwKxB,IAAa,iBAAiB;IAA9B;IAAiC,CAAC;IAAD,wBAAC;AAAD,CAAC,AAAlC,IAAkC;AAArB,iBAAiB;IAL7B,eAAQ,CAAC;QACN,OAAO,EAAE,CAAC,qBAAY,CAAC;QACvB,OAAO,EAAE,CAAC,WAAW,CAAC;QACtB,YAAY,EAAE,CAAC,WAAW,CAAC;KAC9B,CAAC;GACW,iBAAiB,CAAI;AAArB,8CAAiB","sourcesContent":["import {NgModule,Component,ElementRef,AfterViewInit,AfterViewChecked,OnChanges,Input,forwardRef,EventEmitter,Output} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {NG_VALUE_ACCESSOR,ControlValueAccessor} from '@angular/forms';\r\nimport {DomHandler} from '../dom/domhandler';\r\n\r\nexport const INPUTSWITCH_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => InputSwitch),\r\n  multi: true\r\n};\r\n\r\n@Component({\r\n    selector: 'p-inputSwitch',\r\n    template: `\r\n        <div [ngClass]=\"{'ui-inputswitch ui-widget ui-widget-content ui-corner-all': true,\r\n            'ui-state-disabled': disabled,'ui-inputswitch-checked':checked}\" (click)=\"toggle($event, in)\"\r\n            [ngStyle]=\"style\" [class]=\"styleClass\">\r\n            <div class=\"ui-inputswitch-off\">\r\n                <span class=\"ui-inputswitch-offlabel\">{{offLabel}}</span>\r\n            </div>\r\n            <div class=\"ui-inputswitch-on\">\r\n                <span class=\"ui-inputswitch-onlabel\">{{onLabel}}</span>\r\n            </div>\r\n            <div [ngClass]=\"{'ui-inputswitch-handle ui-state-default':true, 'ui-state-focus':focused}\"></div>\r\n            <div class=\"ui-helper-hidden-accessible\">\r\n                <input #in type=\"checkbox\" [attr.id]=\"inputId\" (focus)=\"onFocus($event)\" (blur)=\"onBlur($event)\" readonly=\"readonly\" [attr.tabindex]=\"tabindex\"/>\r\n            </div>\r\n        </div>\r\n    `,\r\n    providers: [INPUTSWITCH_VALUE_ACCESSOR,DomHandler]\r\n})\r\nexport class InputSwitch implements ControlValueAccessor,AfterViewInit,AfterViewChecked {\r\n\r\n    @Input() onLabel: string = 'On';\r\n\r\n    @Input() offLabel: string = 'Off';\r\n\r\n    @Input() disabled: boolean;\r\n\r\n    @Input() style: any;\r\n\r\n    @Input() styleClass: string;\r\n\r\n    @Input() tabindex: number;\r\n\r\n    @Input() inputId: string;\r\n\r\n    @Output() onChange: EventEmitter<any> = new EventEmitter();\r\n\r\n    checked: boolean = false;\r\n\r\n    focused: boolean = false;\r\n\r\n    onModelChange: Function = () => {};\r\n\r\n    onModelTouched: Function = () => {};\r\n\r\n    public container: any;\r\n\r\n    public handle: any;\r\n\r\n    public onContainer: any;\r\n\r\n    public offContainer: any;\r\n\r\n    public onLabelChild: any;\r\n\r\n    public offLabelChild: any;\r\n\r\n    public offset: any;\r\n    \r\n    initialized: boolean = false;\r\n\r\n    constructor(public el: ElementRef, public domHandler: DomHandler) {}\r\n\r\n    ngAfterViewInit() {\r\n        this.container = this.el.nativeElement.children[0];\r\n        this.handle = this.domHandler.findSingle(this.el.nativeElement, 'div.ui-inputswitch-handle');\r\n        this.onContainer = this.domHandler.findSingle(this.container,'div.ui-inputswitch-on');\r\n        this.offContainer = this.domHandler.findSingle(this.container,'div.ui-inputswitch-off');\r\n        this.onLabelChild = this.domHandler.findSingle(this.onContainer,'span.ui-inputswitch-onlabel');\r\n        this.offLabelChild = this.domHandler.findSingle(this.offContainer,'span.ui-inputswitch-offlabel');\r\n    }\r\n    \r\n    ngAfterViewChecked() {\r\n        if(this.container.offsetParent && !this.initialized) {\r\n            this.render();\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        let\tonContainerWidth =  this.domHandler.width(this.onContainer),\r\n            offContainerWidth = this.domHandler.width(this.offContainer),\r\n            spanPadding\t= this.domHandler.innerWidth(this.offLabelChild) - this.domHandler.width(this.offLabelChild),\r\n            handleMargins = this.domHandler.getOuterWidth(this.handle) - this.domHandler.innerWidth(this.handle);\r\n        \r\n        var containerWidth = (onContainerWidth > offContainerWidth) ? onContainerWidth : offContainerWidth,\r\n            handleWidth = containerWidth;\r\n\r\n        this.handle.style.width = handleWidth + 'px';\r\n        handleWidth = this.domHandler.width(this.handle);\r\n        containerWidth = containerWidth + handleWidth + 6;\r\n\r\n        var labelWidth = containerWidth - handleWidth - spanPadding - handleMargins;\r\n\r\n        this.container.style.width = containerWidth + 'px';\r\n        this.onLabelChild.style.width = labelWidth + 'px';\r\n        this.offLabelChild.style.width = labelWidth + 'px';\r\n        \r\n        //position\r\n        this.offContainer.style.width = (this.domHandler.width(this.container) - 5) + 'px';\r\n        this.offset = this.domHandler.width(this.container) - this.domHandler.getOuterWidth(this.handle);\r\n\r\n        //default value\r\n        if(this.checked) {\r\n            this.handle.style.left = this.offset + 'px';\r\n            this.onContainer.style.width = this.offset + 'px';\r\n            this.offLabelChild.style.marginRight = -this.offset + 'px';\r\n        }\r\n        else {\r\n            this.onContainer.style.width = 0 + 'px';\r\n            this.onLabelChild.style.marginLeft = -this.offset + 'px';\r\n        }\r\n        \r\n        this.initialized = true;\r\n    }\r\n\r\n    toggle(event,checkbox) {\r\n        if(!this.disabled) {\r\n            if(this.checked) {\r\n                this.checked = false;\r\n                this.uncheckUI()\r\n            }\r\n            else {\r\n                this.checked = true;\r\n                this.checkUI();\r\n            }\r\n\r\n            this.onModelChange(this.checked);\r\n            this.onChange.emit({\r\n                originalEvent: event,\r\n                checked: this.checked\r\n            });\r\n            checkbox.focus();\r\n        }\r\n    }\r\n\r\n    checkUI() {\r\n        this.onContainer.style.width = this.offset + 'px';\r\n        this.onLabelChild.style.marginLeft = 0 + 'px';\r\n        this.offLabelChild.style.marginRight = -this.offset + 'px';\r\n        this.handle.style.left = this.offset + 'px';\r\n    }\r\n\r\n    uncheckUI() {\r\n        this.onContainer.style.width = 0 + 'px';\r\n        this.onLabelChild.style.marginLeft = -this.offset + 'px';\r\n        this.offLabelChild.style.marginRight = 0 + 'px';\r\n        this.handle.style.left = 0 + 'px';\r\n    }\r\n\r\n    onFocus(event) {\r\n        this.focused = true;\r\n    }\r\n\r\n    onBlur(event) {\r\n        this.focused = false;\r\n        this.onModelTouched();\r\n    }\r\n\r\n    writeValue(checked: any) : void {\r\n        this.checked = checked;\r\n        \r\n        if(this.initialized) {\r\n            if(this.checked === true)\r\n                this.checkUI();\r\n            else\r\n                this.uncheckUI();\r\n        }\r\n    }\r\n\r\n    registerOnChange(fn: Function): void {\r\n        this.onModelChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: Function): void {\r\n        this.onModelTouched = fn;\r\n    }\r\n    \r\n    setDisabledState(val: boolean): void {\r\n        this.disabled = val;\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    exports: [InputSwitch],\r\n    declarations: [InputSwitch]\r\n})\r\nexport class InputSwitchModule { }\r\n"]}