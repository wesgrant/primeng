{"version":3,"file":"dragdrop.js","sourceRoot":"","sources":["dragdrop.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule,Directive,ElementRef,HostListener,Input,Output,EventEmitter} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {DomHandler} from '../dom/domhandler';\r\n\r\n@Directive({\r\n    selector: '[pDraggable]',\r\n    host: {\r\n        '[draggable]': 'true'\r\n    },\r\n    providers: [DomHandler]\r\n})\r\nexport class Draggable {\r\n    \r\n    @Input('pDraggable') scope: string;\r\n        \r\n    @Input() dragEffect: string;\r\n    \r\n    @Input() dragHandle: string;\r\n    \r\n    @Output() onDragStart: EventEmitter<any> = new EventEmitter();\r\n    \r\n    @Output() onDragEnd: EventEmitter<any> = new EventEmitter();\r\n    \r\n    @Output() onDrag: EventEmitter<any> = new EventEmitter();\r\n    \r\n    public handle: any;\r\n        \r\n    constructor(public el: ElementRef, public domHandler: DomHandler) {}\r\n    \r\n    @HostListener('dragstart', ['$event']) \r\n    dragStart(event) {\r\n        if(this.allowDrag()) {\r\n            if(this.dragEffect) {\r\n                event.dataTransfer.effectAllowed = this.dragEffect;\r\n            }\r\n            event.dataTransfer.setData('text', this.scope);\r\n            \r\n            this.onDragStart.emit(event);\r\n        }\r\n        else {\r\n            event.preventDefault();\r\n        }\r\n    }\r\n    \r\n    @HostListener('drag', ['$event']) \r\n    drag(event) {\r\n        this.onDrag.emit(event);\r\n    }\r\n    \r\n    @HostListener('dragend', ['$event']) \r\n    dragEnd(event) {\r\n        this.onDragEnd.emit(event);\r\n    }\r\n    \r\n    @HostListener('mouseover', ['$event']) \r\n    mouseover(event) {\r\n        this.handle = event.target;\r\n    }\r\n    \r\n    @HostListener('mouseleave', ['$event']) \r\n    mouseleave(event) {\r\n        this.handle = null;\r\n    }\r\n    \r\n    allowDrag() : boolean {\r\n        if(this.dragHandle && this.handle)\r\n            return this.domHandler.matches(this.handle, this.dragHandle);\r\n        else\r\n            return true;\r\n    }\r\n    \r\n}\r\n\r\n@Directive({\r\n    selector: '[pDroppable]',\r\n    providers: [DomHandler]\r\n})\r\nexport class Droppable {\r\n    \r\n    @Input('pDroppable') scope: string|string[];\r\n        \r\n    @Input() dropEffect: string;\r\n        \r\n    @Output() onDragEnter: EventEmitter<any> = new EventEmitter();\r\n    \r\n    @Output() onDragLeave: EventEmitter<any> = new EventEmitter();\r\n    \r\n    @Output() onDrop: EventEmitter<any> = new EventEmitter();\r\n    \r\n    @Output() onDragOver: EventEmitter<any> = new EventEmitter();\r\n\r\n    constructor(public el: ElementRef, public domHandler: DomHandler) {}\r\n            \r\n    @HostListener('drop', ['$event'])\r\n    drop(event) {\r\n        if(this.allowDrop(event)) {\r\n            event.preventDefault();\r\n            this.onDrop.emit(event);\r\n        }\r\n    }\r\n    \r\n    @HostListener('dragenter', ['$event']) \r\n    dragEnter(event) {\r\n        event.preventDefault();\r\n        \r\n        if(this.dropEffect) {\r\n            event.dataTransfer.dropEffect = this.dropEffect;\r\n        }\r\n                \r\n        this.onDragEnter.emit(event);\r\n    }\r\n    \r\n    @HostListener('dragleave', ['$event']) \r\n    dragLeave(event) {\r\n        event.preventDefault();\r\n                \r\n        this.onDragLeave.emit(event);\r\n    }\r\n    \r\n    @HostListener('dragover', ['$event']) \r\n    dragOver(event) {\r\n        event.preventDefault();\r\n        this.onDragOver.emit(event);\r\n    }\r\n    \r\n    allowDrop(event): boolean {\r\n        let dragScope = event.dataTransfer.getData('text');\r\n        if(typeof (this.scope) == \"string\" && dragScope == this.scope) {\r\n            return true;\r\n        }\r\n        else if(this.scope instanceof Array) {\r\n            for(let j = 0; j < this.scope.length; j++) {\r\n                if(dragScope == this.scope[j]) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    exports: [Draggable,Droppable],\r\n    declarations: [Draggable,Droppable]\r\n})\r\nexport class DragDropModule { }"]}