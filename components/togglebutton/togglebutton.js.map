{"version":3,"file":"togglebutton.js","sourceRoot":"","sources":["togglebutton.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule,Component,Input,Output,EventEmitter,forwardRef,AfterViewInit,ViewChild,ElementRef} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from '@angular/forms';\r\n\r\nexport const TOGGLEBUTTON_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => ToggleButton),\r\n  multi: true\r\n};\r\n\r\n@Component({\r\n    selector: 'p-toggleButton',\r\n    template: `\r\n        <div [ngClass]=\"{'ui-button ui-togglebutton ui-widget ui-state-default ui-corner-all': true, 'ui-button-text-only': (!onIcon&&!offIcon), 'ui-button-text-icon-left': (onIcon&&offIcon),\r\n                'ui-state-active': checked,'ui-state-focus':focus,'ui-state-disabled':disabled}\" [ngStyle]=\"style\" [class]=\"styleClass\" \r\n                (click)=\"toggle($event)\">\r\n            <div class=\"ui-helper-hidden-accessible\">\r\n                <input #checkbox type=\"checkbox\" [attr.id]=\"inputId\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\" [attr.tabindex]=\"tabindex\">\r\n            </div>\r\n            <span *ngIf=\"onIcon||offIcon\" [class]=\"getIconClass()\"></span>\r\n            <span class=\"ui-button-text ui-unselectable-text\">{{checked ? onLabel : offLabel}}</span>\r\n        </div>\r\n    `,\r\n    providers: [TOGGLEBUTTON_VALUE_ACCESSOR]\r\n})\r\nexport class ToggleButton implements ControlValueAccessor,AfterViewInit {\r\n\r\n    @Input() onLabel: string = 'Yes';\r\n\r\n    @Input() offLabel: string = 'No';\r\n\r\n    @Input() onIcon: string;\r\n\r\n    @Input() offIcon: string;\r\n\r\n    @Input() disabled: boolean;\r\n\r\n    @Input() style: any;\r\n\r\n    @Input() styleClass: string;\r\n\r\n    @Input() inputId: string;\r\n\r\n    @Input() tabindex: number;\r\n\r\n    @Output() onChange: EventEmitter<any> = new EventEmitter();\r\n    \r\n    @ViewChild('checkbox') checkboxViewChild: ElementRef;\r\n    \r\n    checkbox: HTMLInputElement;\r\n    \r\n    checked: boolean = false;\r\n\r\n    focus: boolean = false;\r\n    \r\n    onModelChange: Function = () => {};\r\n    \r\n    onModelTouched: Function = () => {};\r\n    \r\n    ngAfterViewInit() {\r\n        this.checkbox = <HTMLInputElement> this.checkboxViewChild.nativeElement;\r\n    }\r\n\r\n    getIconClass() {\r\n        let baseClass = 'ui-button-icon-left fa fa-fw';\r\n        return baseClass + ' ' + (this.checked ? this.onIcon : this.offIcon);\r\n    }\r\n    \r\n    toggle(event: Event) {\r\n        if(!this.disabled) {\r\n            this.checked = !this.checked;\r\n            this.onModelChange(this.checked);\r\n            this.onModelTouched();\r\n            this.onChange.emit({\r\n                originalEvent: event,\r\n                checked: this.checked\r\n            });\r\n            this.checkbox.focus();\r\n        }\r\n    }\r\n\r\n    onFocus() {\r\n        this.focus = true;\r\n    }\r\n    \r\n    onBlur() {\r\n        this.focus = false;\r\n        this.onModelTouched();\r\n    }\r\n    \r\n    writeValue(value: any) : void {\r\n        this.checked = value;\r\n    }\r\n    \r\n    registerOnChange(fn: Function): void {\r\n        this.onModelChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: Function): void {\r\n        this.onModelTouched = fn;\r\n    }\r\n    \r\n    setDisabledState(val: boolean): void {\r\n        this.disabled = val;\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    exports: [ToggleButton],\r\n    declarations: [ToggleButton]\r\n})\r\nexport class ToggleButtonModule { }"]}