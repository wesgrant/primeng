{"version":3,"file":"inputtextarea.js","sourceRoot":"","sources":["inputtextarea.ts"],"names":[],"mappings":"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","sourcesContent":["import {NgModule,Directive,ElementRef,HostListener,Input,OnInit,DoCheck} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\n@Directive({\r\n    selector: '[pInputTextarea]',\r\n    host: {\r\n        '[class.ui-inputtext]': 'true',\r\n        '[class.ui-corner-all]': 'true',\r\n        '[class.ui-state-default]': 'true',\r\n        '[class.ui-widget]': 'true',\r\n        '[class.ui-state-filled]': 'filled',\r\n        '[attr.rows]': 'rows',\r\n        '[attr.cols]': 'cols'\r\n    }\r\n})\r\nexport class InputTextarea implements OnInit,DoCheck {\r\n    \r\n    @Input() autoResize: boolean;\r\n    \r\n    @Input() rows: number;\r\n    \r\n    @Input() cols: number;\r\n    \r\n    rowsDefault: number;\r\n    \r\n    colsDefault: number;\r\n    \r\n    filled: boolean;\r\n        \r\n    constructor(public el: ElementRef) {}\r\n    \r\n    ngOnInit() {\r\n        this.rowsDefault = this.rows;\r\n        this.colsDefault = this.cols;\r\n    }\r\n    \r\n    ngDoCheck() {\r\n        this.updateFilledState();\r\n    }\r\n    \r\n    //To trigger change detection to manage ui-state-filled for material labels when there is no value binding\r\n    @HostListener('input', ['$event']) \r\n    onInput(e) {\r\n        this.updateFilledState();\r\n    }\r\n    \r\n    updateFilledState() {\r\n        this.filled = this.el.nativeElement.value && this.el.nativeElement.value.length;\r\n    }\r\n    \r\n    @HostListener('focus', ['$event']) \r\n    onFocus(e) {        \r\n        if(this.autoResize) {\r\n            this.resize();\r\n        }\r\n    }\r\n    \r\n    @HostListener('blur', ['$event']) \r\n    onBlur(e) {        \r\n        if(this.autoResize) {\r\n            this.resize();\r\n        }\r\n    }\r\n    \r\n    @HostListener('keyup', ['$event']) \r\n    onKeyup(e) {\r\n        if(this.autoResize) {\r\n            this.resize();\r\n        }\r\n    }\r\n    \r\n    resize () {\r\n        let linesCount = 0,\r\n        lines = this.el.nativeElement.value.split('\\n');\r\n\r\n        for(let i = lines.length-1; i >= 0 ; --i) {\r\n            linesCount += Math.floor((lines[i].length / this.colsDefault) + 1);\r\n        }\r\n\r\n        this.rows = (linesCount >= this.rowsDefault) ? (linesCount + 1) : this.rowsDefault;\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    exports: [InputTextarea],\r\n    declarations: [InputTextarea]\r\n})\r\nexport class InputTextareaModule { }"]}